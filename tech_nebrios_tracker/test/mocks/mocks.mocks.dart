// Mocks generated by Mockito 5.4.6 from annotations
// in tech_nebrios_tracker/test/mocks/mocks.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i6;

import 'package:mockito/mockito.dart' as _i1;
import 'package:tech_nebrios_tracker/data/models/charolaModel.dart' as _i4;
import 'package:tech_nebrios_tracker/data/models/menuCharolasModel.dart' as _i9;
import 'package:tech_nebrios_tracker/data/repositories/consultar_charola_repository.dart'
    as _i3;
import 'package:tech_nebrios_tracker/data/repositories/eliminar_charola_repository.dart'
    as _i2;
import 'package:tech_nebrios_tracker/domain/consultarCharolaUseCase.dart' as _i7;
import 'package:tech_nebrios_tracker/domain/eliminarCharolaUseCase.dart' as _i5;
import 'package:tech_nebrios_tracker/domain/charolasDashboardUseCase.dart' as _i8;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeEliminarCharolaRepository_0 extends _i1.SmartFake
    implements _i2.EliminarCharolaRepository {
  _FakeEliminarCharolaRepository_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeCharolaRepository_1 extends _i1.SmartFake
    implements _i3.CharolaRepository {
  _FakeCharolaRepository_1(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeCharola_2 extends _i1.SmartFake implements _i4.CharolaDetalle {
  _FakeCharola_2(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [EliminarCharolaUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockEliminarCharolaUseCase extends _i1.Mock
    implements _i5.EliminarCharolaUseCase {
  MockEliminarCharolaUseCase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.EliminarCharolaRepository get repository =>
      (super.noSuchMethod(
            Invocation.getter(#repository),
            returnValue: _FakeEliminarCharolaRepository_0(
              this,
              Invocation.getter(#repository),
            ),
          )
          as _i2.EliminarCharolaRepository);

  @override
  _i6.Future<void> eliminar(int? id) =>
      (super.noSuchMethod(
            Invocation.method(#eliminar, [id]),
            returnValue: _i6.Future<void>.value(),
            returnValueForMissingStub: _i6.Future<void>.value(),
          )
          as _i6.Future<void>);
}

/// A class which mocks [ObtenerCharolaUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockObtenerCharolaUseCase extends _i1.Mock
    implements _i7.ObtenerCharolaUseCase {
  MockObtenerCharolaUseCase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.CharolaRepository get repository =>
      (super.noSuchMethod(
            Invocation.getter(#repository),
            returnValue: _FakeCharolaRepository_1(
              this,
              Invocation.getter(#repository),
            ),
          )
          as _i3.CharolaRepository);

  @override
  _i6.Future<_i4.CharolaDetalle> obtenerCharola(int? id) =>
      (super.noSuchMethod(
            Invocation.method(#obtenerCharola, [id]),
            returnValue: _i6.Future<_i4.CharolaDetalle>.value(
              _FakeCharola_2(this, Invocation.method(#obtenerCharola, [id])),
            ),
          )
          as _i6.Future<_i4.CharolaDetalle>);
}

/// A class which mocks [ObtenerMenuCharolas].
///
/// See the documentation for Mockito's code generation for more information.
class MockObtenerMenuCharolas extends _i1.Mock
    implements _i8.ObtenerMenuCharolas {
  MockObtenerMenuCharolas() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.Future<_i9.CharolaDashboard?> ejecutar({int? pag, int? limite}) =>
      (super.noSuchMethod(
            Invocation.method(#ejecutar, [], {#pag: pag, #limite: limite}),
            returnValue: _i6.Future<_i9.CharolaDashboard?>.value(),
          )
          as _i6.Future<_i9.CharolaDashboard?>);
}
